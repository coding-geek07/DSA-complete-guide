1.What is an Algorithm?
Ans: An algorithm is basically a series of steps or process to solve a task.

2.How do you improve problem solving skills?
Ans: we can follow a two step process 
i. Devise a plan to solve problems
ii. Master common problem solving patterns

3.Problem solving strategies?
Ans: We can follow the below steps in order to approach a problem to solve
step 1: UNDERSTAND THE PROBLEM
-> Questions you need to ask yourself or interviewer inorder to understand the problem completely.
i.Can I restate the problem in my own words?
ii.What are the inputs that go into the problem?
iii.What are the outputs that should come from the solution to the problem?
iv.Can the outputs be determined from the inputs? In other words, do I have enough information to solve the problem? (You may not be able to answer this question until you set about solving the problem. That's okay; it's still worth considering the question at this early stage.)
v.How should I label the important pieces of data that are a part of the problem?

->Example: Write a function which takes two numbers and returns their sum.
i.Can I restate the problem in my own words?
Ask: Is it like implementing an addition. correct?

ii.What are the inputs that go into the problem?
Ask: Are my inputs 
        - Integer alone
        - Floats
        - what about strings or big numbers?
        - Is there any restriction that function should allow only two numbers?

iii.What are the outputs that should come from the solution to the problem?
Ask: what type of outputs are expected?
        - Int? float? strings? or anything is fine?

iv.Can the outputs be determined from the inputs? In other words, do I have enough information to solve the problem? (You may not be able to answer this question until you set about solving the problem. That's okay; it's still worth considering the question at this early stage.)
Ask: Do i have all the information required in implementing the logic or do i need to have any other values? For ex you can ask
        - what if the user passes only one number?
        - if the number is not provided should we return undefined or null or etc.,
        - should i add 0 to perform the operation?

v.How should I label the important pieces of data that are a part of the problem?
Ask: Are there any specific terms you want me to use for the data like
     - function name should be add()?
     - params name should be num1, num2?
     - should i display it as sum when the result is returned?

step 2: Explore concrete examples
Basically we need to explore all output options and clarify the doubts with those examples
-> EXPLORE EXAMPLES
    i.Start with Simple Examples
    ii.Progress to More Complex Examples
    iii.Explore Examples with Empty Inputs
    iv.Explore Examples with Invalid Inputs

Example: Write a function which takes in a string and returns counts of each character in the string.
i.Start with Simple Examples
    - charCount("aaaa"); o/p : {a: 4}
    - charCount("hello"); o/p: {h: 1, e:1, l:2, o:1}

ii.Progress to More Complex Examples
    - what if the function has input with spaces? should we consider them? - "my phone got lost"
    - what about special characters, numbers and should we consider case sensitive as well? - "My email is demo#$123@gmail.com" - how should we o/p this? should we add any restriction?   
    
iii.Explore Examples with Empty Inputs
    - what if the string is empty? should we o/p null or undefined or 0 or any string saying "empty string"?

iv.Explore Examples with Invalid Inputs
    - what if they enter invalid inputs like null, empty object, number, boolean? should we return error or anything specific? 
    
We should be asking these questions inorder to get a fair understanding on the outputs expected and to handle errors.

step 3: Break it down
Explicitly write out the steps you need to take.
This forces you to think about the code you'll write before you write it, and helps you catch any lingering conceptual issues or misunderstandings before you dive in and have to worry about details (e.g. language syntax) as well.

Example: Same program as above
function charCount(str) {
    // make object to return at end
    // loop over string, for each character...
        // if the char is a number/letter AND is a key in object, add one to count
        // if the char is a number/letter AND not in object, add it to object and set value to 1
        // if character is something else (space, period, etc.) don't do anything
    // return object at end
}

step 4: Solve / Simplify
If you can solve the problem after breaking it done then go ahead. If not follow the below steps by Simplifying it!!
SIMPLIFY (Refer the image "solve_simplify" for the program solution)
i.Find the core difficulty in what you're trying to do
ii.Temporarily ignore that difficulty
iii.Write a simplified solution
iv.Then incorporate that difficulty back in

step 5: Look back and refactor
REFACTORING QUESTIONS
i.Can you check the result?
ii.Can you derive the result differently?
iii.Can you understand it at a glance?
iv.Can you use the result or method for some other problem?
v.Can you improve the performance of your solution?
vi.Can you think of other ways to refactor?
vii.How have other people solved this problem?

You can refer Original_Code and Refactored_Code images for this step.