1. Write a factorial recursion

input : 4
output : 4 * 3 * 2* 1 : 24

function getFactorialOf(num) {
    if (num === 1) return 1;
    return num * getFactorialOf(num - 1);
}

console.log(getFactorialOf(4));

2.Collect Odd values from an Array 

input : [1,2,3,4,5]
output: [1,3,5]

//Pure recursion approach
function collectOddValues(arr){
    let newArr = [];
    
    if(arr.length === 0) {
        return newArr;
    }
        
    if(arr[0] % 2 !== 0){
        newArr.push(arr[0]);
    }
        
    newArr = newArr.concat(collectOddValues(arr.slice(1)));
    return newArr;
}

collectOddValues([1,2,3,4,5])

// Helper Method Approach
function collectOddValues(arr){
    
    let result = [];

    function helper(helperInput){
        if(helperInput.length === 0) {
            return;
        }
        
        if(helperInput[0] % 2 !== 0){
            result.push(helperInput[0])
        }
        
        helper(helperInput.slice(1))
    }
    
    helper(arr)

    return result;
}

collectOddValues([1,2,3,4,5,6,7,8,9])
                                        
3.power
Write a function called power which accepts a base and an exponent. The function should return the power of the base to the exponent. This function should mimic the functionality of Math.pow()  - do not worry about negative bases and exponents.

function power(base, exponent) {
    if (exponent === 0) return 1;

    return base * (power(base, exponent - 1));
}
console.log(power(2, 0));
/* 2 * power(2, 3)
    2 * power(2, 2)
        2 * power(2, 1)
            2 * power(2, 0) */

4.productOfArray
Write a function called productOfArray which takes in an array of numbers and returns the product of them all.
function productOfArray(arr) {
    if (!arr.length) return 1;
    return arr[0] * productOfArray(arr.slice(1));
}
console.log(productOfArray([1, 2, 3, 10]));     


5.recursiveRange
Write a function called recursiveRange which accepts a number and adds up all the numbers from 0 to the number passed to the function
                            
            